#BlueJ class context
comment0.target=StudList
comment0.text=\r\n\ ArrayList\ Project\r\n\r\n\ @Steven\ Nguyen\r\n\ @version\ 1025\r\n
comment1.params=
comment1.target=StudList()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ StudList\r\n
comment10.params=
comment10.target=void\ printAll()
comment10.text=\r\n\ traverses\ the\ arrray\ and\ prints\ each\ student's\ name,\ number,\ and\ gpa\r\n
comment11.params=num\ ln
comment11.target=void\ printStudent(int,\ java.lang.String)
comment11.text=\r\n\ finds\ the\ student\ given\ number\ or\ last\ name\r\n\ prints\ that\ student's\ information\ or\ prints\ that\ the\ student\ does\ not\ exist\r\n
comment12.params=num
comment12.target=boolean\ studNumAlreadyExists(int)
comment12.text=\r\n\ given\ a\ six-digit\ number,\ checks\ to\ see\ if\ a\ student\ with\ that\ number\ already\ exists\r\n
comment2.params=a\ n
comment2.target=void\ mergeSort(java.util.ArrayList,\ int)
comment2.text=\r\n\ implements\ the\ merge\ sort\ algorithm\r\n
comment3.params=
comment3.target=void\ runMergeSort()
comment3.text=\r\n\ implements\ the\ merge\ sort\ algorithm\r\n
comment4.params=a\ l\ r\ left\ right
comment4.target=void\ merge(java.util.ArrayList,\ java.util.ArrayList,\ java.util.ArrayList,\ int,\ int)
comment4.text=\r\n\ implements\ the\ merge\ sort\ algorithm\r\n
comment5.params=name\ student
comment5.target=void\ parseUserInput(java.lang.String,\ Student)
comment5.text=\r\n\ separates\ the\ user\ input\ into\ three\ strings\ corresponding\ to\ first,\ middle,\ and\ last\ names\r\n\ sets\ the\ first,\ middle,\ and\ last\ names\ for\ the\ given\ student\r\n
comment6.params=name\ num\ gpa
comment6.target=void\ addStudent(java.lang.String,\ int,\ double)
comment6.text=\r\n\ adds\ a\ student\ to\ the\ list\ with\ the\ name,\ student\ number,\ and\ gpa\r\n\ then\ parses\ the\ name\ input\ to\ set\ first,\ middle,\ and\ last\ names\r\n
comment7.params=num\ ln
comment7.target=void\ deleteStudent(int,\ java.lang.String)
comment7.text=\r\n\ takes\ either\ the\ student\ number\ or\ the\ last\ name\ and\ decides\ which\ one\ was\ inputted\r\n\ traverses\ the\ student\ ArrayList\ to\ find\ if\ a\ student\ with\ a\ matching\ number\ or\ last\ name\ exists\r\n\ deletes\ that\ student\ or\ prints\ that\ the\ student\ does\ not\ exist\r\n
comment8.params=num\ ln
comment8.target=void\ editStudentList(int,\ java.lang.String)
comment8.text=\r\n\ finds\ the\ student\ given\ either\ the\ number\ of\ the\ last\ name\r\n\ loops\ through\ a\ menu\ of\ options\ for\ updating\ the\ given\ student's\ name\ or\ gpa\r\n\ may\ return\ to\ main\ menu\ when\ finished\r\n
comment9.params=
comment9.target=void\ clearList()
comment9.text=\r\n\ clears\ the\ student\ list\r\n
numComments=13
